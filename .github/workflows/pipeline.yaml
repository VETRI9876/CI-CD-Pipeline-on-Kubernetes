name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t vetri20/flask-app:latest .
          docker push vetri20/flask-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          kubectl-version: 'v1.24.0'

      - name: Set up Azure credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ðŸ†• Apply Flask v1 and v2 deployments
      - name: Deploy Flask App (v1 & v2) to AKS
        run: |
          kubectl apply -f kubernetes/flask-app-v1-deployment.yaml
          kubectl apply -f kubernetes/flask-app-v2-deployment.yaml
          kubectl apply -f kubernetes/flask-app-service.yaml

      # ðŸ†• Apply TrafficSplit config
      - name: Deploy Linkerd TrafficSplit
        run: |
          kubectl apply -f kubernetes/linkerd-trafficsplit.yaml

      # âœ… (Optional) Apply Linkerd service profile for monitoring
      - name: Deploy Linkerd Monitoring (Optional)
        run: |
          kubectl apply -f kubernetes/linkerd-serviceprofile.yaml

      - name: Deploy Nagios to AKS
        run: |
          kubectl apply -f kubernetes/nagios-deployment.yaml
          kubectl apply -f kubernetes/nagios-service.yaml

      # âœ… Verify Deployments
      - name: Verify Deployment Rollouts
        run: |
          kubectl rollout status deployment/flask-app-v1
          kubectl rollout status deployment/flask-app-v2
          kubectl rollout status deployment/nagios

      # ðŸ†• Monitor TrafficSplit from Linkerd Dashboard (manual step suggestion)
      - name: Print TrafficSplit Info
        run: |
          echo "To monitor traffic, run: linkerd dashboard"
          kubectl get trafficsplit
